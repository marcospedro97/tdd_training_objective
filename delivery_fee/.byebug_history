c
shopping_cart.reload.products.empty?
shopping_cart.reload.products
shopping_cart.reload
c
shopping_cart_product.amount - amount.to_i == 0
b 7
c
shopping_cart_product.nil?
shopping_cart_product.destroy if shopping_cart_product.amount - amount.to_i == 0
b 7
b7
shopping_cart_product.nil?
shopping_cart_product
shopping_cart
c
shopping_cart.shopping_cart_products
c
shopping_cart.shopping_cart_products
c
shopping_cart.shopping_cart_products
c
shopping_cart.shopping_cart_products
shopping_cart
c
shopping_cart.reload.is_active
c
shopping_cart.reload.is_active
c
shopping_cart.reload.is_active
shopping_cart.is_active
ShoppingCarts::Destroy.call(shopping_cart: shopping_cart)
shopping_cart.products.empty?
c
json
c
@value
c
User.count
User.first
User.find params[:user_id]
params[:user_id]
ShoppingCarts::ValueProcessor.call(user_id: params[:user_id])
@value
c
json
c
value.to_i
value
c
v
c
json
response.body
response
c
product_id
c
product
c
shopping_cart_params
c
shopping_cart_params
c
product_id
product_od
c
product
c
shopping_cart_params
shopping_cart_params[:products]
c
product
c
product
c
amount
product_id
c
shopping_cart.shopping_cart_products
ShoppingCarts::AddProductRepository.call shopping_cart: shopping_cart, product_id: @products.first[:id], amount: @products.first[:amount]
@products
shopping_cart.shopping_cart_products
shopping_cart
c
ShoppingCarts::AddOrCreateProcessor.call(user_id: shopping_cart_params[:user_id], products: shopping_cart_params[:products])
u.shopping_carts.first.shopping_cart_products
u.shopping_carts.first.products
u.shopping_carts
u = User.find shopping_cart_params[:user_id]
User.find shopping_cart_params[:user_id]
@shopping_cart
c
shopping_cart.shopping_cart_products
shopping_cart
e.amount
e.update(amount: e.amount + amount.to_i)
e = shopping_cart.shopping_cart_products.find_or_create_by(product_id: product_id)
e = _
b = _
shopping_cart.shopping_cart_products.find_or_create_by(product_id: product_id)
shopping_cart.shopping_cart_products
shopping_cart
c
user.shopping_carts.first
user.shopping_carts.first.shopping_cart_products
user.shopping_carts.shopping_cart_products
user.shopping_carts.shopping_cart_productsproducts
user.shopping_carts.products
user.shopping_carts.count
user.shopping_carts.first.shopping_cart_products
user.shopping_carts.first.products
user.shopping_carts.first
c
@current_user_id
c
current_user
c
request.headers
request.headers.to_h["Authorization"]
request.headers.to_h
request.headers.req
request.headers
request.headers['Authorization'].present?
@current_user_id
process_token
current_user
@current_user_id
c
signed_in?
@current_user_id
c
current_user
c
sign_in_params
c
response.body
response.status
response.http_status
response.body
c
auth_headers(user)
c
response.body
request.body
c
request.body
request.body.to_s
request.body
request
response.body
c
C
response.body
response
@reponse
reponse
c
repository.call(user_id: @user_id).shopping_cart_products
repository.call(user_id: @user_id)
repository.call(user_id: user.id)
c
repository.call(user_id: user.id)
continue
repository.call(user_id: user.id)
repository.call(user: user)
c
shopping_cart_product
c
shopping_cart_product
continue
shopping_cart_product
